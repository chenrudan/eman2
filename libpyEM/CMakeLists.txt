#this definition is for boost.python > 1.35.0 
ADD_DEFINITIONS(-DBOOST_PYTHON_NO_PY_SIGNATURES)

INCLUDE_DIRECTORIES(
			${EMAN_SOURCE_DIR}/libEM
			${EMAN_SOURCE_DIR}/libpyEM 
			${BOOST_INCLUDE_PATH} 
			${PYTHON_INCLUDE_PATH}
			)

IF(CMAKE_SYSTEM MATCHES "IRIX.*")
    INCLUDE_DIRECTORIES(${BOOST_INCLUDE_PATH}/boost/compatibility/cpp_c_headers)
ENDIF(CMAKE_SYSTEM MATCHES "IRIX.*")

MACRO(ADD_PYSTE_LIB_WITH_SRC libname srcfile)
	ADD_LIBRARY(${libname} SHARED lib${libname}.cpp ${srcfile})
	
	if(WIN32)
		set(suffix .pyd)
	else()
		set(suffix .so)
	endif()

	set_target_properties(${libname}
			PROPERTIES
			PREFIX lib
			SUFFIX ${suffix}
			INSTALL_RPATH "@loader_path/../../../;@loader_path/."
			)
	
	set (CMAKE_MODULE_LINKER_FLAGS "${CMAKE_SHARED_LINKER_FLAGS} -Wl,--no-as-needed")
	TARGET_LINK_LIBRARIES(${libname} EM2 ${BOOST_LIBRARY} ${PYTHON_LIBRARY})
	INSTALL(TARGETS ${libname}
			DESTINATION ${CMAKE_INSTALL_PREFIX}/EMAN2)
	INSTALL(TARGETS ${libname}
			DESTINATION ${CMAKE_INSTALL_PREFIX}/sparx)
ENDMACRO(ADD_PYSTE_LIB_WITH_SRC)


MACRO(ADD_PYSTE_LIB libname)
	ADD_PYSTE_LIB_WITH_SRC(${libname} "")
ENDMACRO(ADD_PYSTE_LIB)

ADD_PYSTE_LIB(pyAligner2)

IF(ENABLE_OPENGL)
    ADD_PYSTE_LIB(pyGLUtils2) 
    ADD_PYSTE_LIB(pyMarchingCubes2)   
    TARGET_LINK_LIBRARIES(pyGLUtils2 GLEM2)
    TARGET_LINK_LIBRARIES(pyMarchingCubes2 GLEM2)
	
	IF(ENABLE_FTGL)
		INCLUDE_DIRECTORIES(${FTGL_INCLUDE_PATH})
		IF(ENABLE_STATIC_FTGL)
			TARGET_LINK_LIBRARIES(pyGLUtils2 ${FTGL_LIBRARY} freetype ${FREETYPE_LIBRARY})
		ELSE(ENABLE_STATIC_FTGL)
			TARGET_LINK_LIBRARIES(pyGLUtils2 ${FTGL_LIBRARY})
		ENDIF(ENABLE_STATIC_FTGL)
	ENDIF(ENABLE_FTGL)
ENDIF(ENABLE_OPENGL)

FILE(GLOB empythonlibs "${CMAKE_CURRENT_SOURCE_DIR}/*.py")
INSTALL(FILES ${empythonlibs} DESTINATION ${CMAKE_INSTALL_PREFIX}/EMAN2)

ADD_SUBDIRECTORY(qtgui)
